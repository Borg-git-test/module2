<?php

/**
 * @file
 * Provides a borg entity type.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function borg_theme() {
  return [
    'borg' => [
      'render element' => 'elements',
    ],
    'all' => [
      'variables' => ['form' => [], 'element' => [],],
    ],
  ];
}

/**
 * Prepares variables for borg templates.
 *
 * Default template: borg.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the borg information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_borg(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }

//  /** @var ArtworkInterface $entity */
  $entity = $variables['elements']['#borg'];
  //provide the label
  $variables['label'] = $entity->label();
  //provide the alias
  $variables['url'] = $entity->toUrl()->toString();

//  $variables['content']['telephone'] = $entity->getTelephone();

  if (empty($entity->avatar->target_id)) {
    $variables['content']['avatar'] = $entity->getDefaultAvatar();
  }


//  if (is_null($entity->getAvatar())) {
//    $variables['content']['avatar'] = [
//      '#theme' => 'image',
//      '#uri' => $entity->getDefaultAvatar(),
//      '#alt' => t('Default Guest avatar.'),
//    ];
//  }
}
